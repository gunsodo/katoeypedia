name: Dictionary Automation

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  schedule:
    - cron: 0 0 * * *

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
          registry-url: https://registry.npmjs.org/
      
      - name: Retrieve data from Google Sheets
        uses: jroehl/gsheet.action@v1.1.0
        env:
          GSHEET_CLIENT_EMAIL: ${{ secrets.GSHEET_CLIENT_EMAIL }}
          GSHEET_PRIVATE_KEY: ${{ secrets.GSHEET_PRIVATE_KEY }}
        id: 'retrieve_data'
        with:
          spreadsheetId: ${{ secrets.SPREADSHEET_ID }}
          commands: | # list of commands, specified as a valid JSON string
            [
              { 
                "command": "getData", 
                "args": 
                  { 
                    "hasHeaderRow": true,
                    "worksheetTitle": "Dictionary"
                  } 
              }
            ]

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Compile dictionary
        id: compile
        env:
          #  the output of the action can be found in ${{ steps.worksheet.outputs.results }}
          results: ${{ steps.retrieve_data.outputs.results }}
        run: |
          echo "${results}" > ./out
          python ./.github/workflows/autoupdate.py < ./out
          rm ./out
        
      - name: Commit changes
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git add ./public/dictionary.json
          git commit ./public/dictionary.json -m "autoupdate dictionary.json"
          git push
      
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: |
          prodRun=""
          if [[ ${GITHUB_REF} == "refs/heads/main" ]]; then
            prodRun="--prod"
          fi
          npx vercel --token ${VERCEL_TOKEN} $prodRun

